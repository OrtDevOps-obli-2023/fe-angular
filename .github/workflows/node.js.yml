# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Build and Deploy to AWS S3

on:
  push:
    branches: [ "feature/implementCICD-gitHubAction-40" ]
  pull_request:
    branches: [ "feature/implementCICD-gitHubAction-40" ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
       persist-credentials: false
    - name: SetupNode
      uses: actions/setup-node@v3
      with:
        # Version Spec of the version to use in SemVer notation.
        # It also emits such aliases as lts, latest, nightly and canary builds
        # Examples: 12.x, 10.15.1, >=10.15.0, lts/Hydrogen, 16-nightly, latest, node
        node-version: '16.x'
    - name: Setup PNPM
      uses: pnpm/action-setup@v2
      with:
        version: 6.0.2
        run_install: |
          - recursive: true
            args: [--frozen-lockfile, --strict-peer-dependencies]
          - args: [--global, gulp, prettier, typescript]
    - name: Build client
      run: pnpm build
    
    - name: Generate build artifacts
      run: |
          # Generate your build artifacts in the "generated" directory
          mkdir generated
          # Copy or build your files into the "generated" directory
          cp -R dist generated

    - name: Upload build artifacts
      uses: actions/upload-artifact@v2
      with:
        name: generated-artifacts
        path: generated
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Download build artifacts
      uses: actions/download-artifact@v2
      with:
        name: generated-artifacts
        path: generated
   # - name: Install AWS CLI
    #  run: |
     #     curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
      #    unzip awscliv2.zip
      #    sudo ./aws/install
    - name: Configure AWS credentials
      run: |
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws configure set aws_session_token ${{ secrets.AWS_SESSION_TOKEN }}
          aws configure set region us-east-1
    - name: Deploy to S3
      run: aws s3 sync generated 's3://${{ secrets.AWS_S3_BUCKET }}' --acl public-read --delete

     
