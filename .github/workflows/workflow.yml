# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Build and Deploy

on:
  push:
    branches: [ "feature/angularCICD-US40-WI50" ]
  #pull_request:
  #  branches: [ "main" ]
env:
  dev: 'dev'
  prod: 'prod'
  staging: 'staging'
jobs:
  setup-build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: SetupNode
      uses: actions/setup-node@v3
      with:
        node-version: '16.x'
    - name: Setup PNPM
      uses: pnpm/action-setup@v2
      with:
        version: 6.0.2
        run_install: |
          - recursive: true
            args: [--frozen-lockfile, --strict-peer-dependencies]
          - args: [--global, gulp, prettier, typescript]
        #cache: 'pnpm'
 
  #build:
   # needs: setup
   # runs-on: ubuntu-latest
   # steps:
  #  - uses: actions/checkout@v3
  #  - uses: pnpm/action-setup@v2
  #    with:
  #       version: 6.0.2
    - run: pnpm build
    - name: Generate build artifacts
      run: |
          mkdir generated
          cp -R dist generated
    - name: Upload build artifacts
      uses: actions/upload-artifact@v2
      with:
        name: generated-artifacts
        path: generated
  # test:
  #   needs: build
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v3
  #       with:
  #        # Disabling shallow clone is recommended for improving relevancy of reporting for sonarQube
  #        fetch-depth: 0
  #        persist-credentials: false
  #     - name: SonarQube Scan
  #       uses: kitabisa/sonarqube-action@v1.2.0
  
  deploy-dev:
    needs: setup-build
    uses: ./.github/workflows/deploy.yml
    with:
        CI_ENV: dev
        ARTIFACT_NAME: 'generated-artifacts'
        APPROVERS: 'deploy-approvers-fe-angular'
          #
    secrets:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN}}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
          AWS_S3_BUCKET_ANGULAR: ${{ secrets.AWS_S3_BUCKET_ANGULAR }}
          APP_ID: ${{ secrets.APP_ID }}
          APP_PRIVATE_KEY: '-----BEGIN RSA PRIVATE KEY-----
            MIIEpAIBAAKCAQEAuMM4VUg8AzRk4NUa5INUaDH72Gxqa3Gq0YURikfQWRuEIL05
            iBUC3M2Zc2VCUjCSGx8+cp9RdQH4SBJwa0Rbt1xaFWg7UFJxpePO/3yDXg8PlZYA
            AXx6YVFaI0axv7fVMEVHpVkiFEvE18UPIVqZQAEmX5yNqYCQedhE4X8hE7aXN43B
            PU4W7MtfqoHuLlHtzHzyDXXO8kN7e2nrfaWpJYtvBVBHRi7YxRi1eERVp0mUIO9U
            XshEkfQnz3bP2ngVRU3+sKr/apOC7SqxWMeDtCpHGuWOeqkH6xOvaud/SrD0uYHZ
            qNlJ6UuCwFwO3oJkZya2GMbYEgrHuTI22LYQQQIDAQABAoIBAQCB2wtDvTIYmoFw
            F7b/9mGjncXAtWoSO+Bvw5OxWYnQpus1S2kdAI9zerkoBnoXY/W8RDhSvTC2CP1k
            Qjlq2q+PbsQNmaVebaNckYERxYRa3kD4xGUapk8pCNFOS8hv05dthrO1PbEbDKm7
            cM+ShKeC+Yvr1Q8nm6lvSZYX2o7318DduUFACELFnJ0W40DoatN5WadPLlzT4usT
            ctJw3Im96PP0RJ2WtIvZGwcNAY8tV4QiiN7t38rFZFyh7Lbr+pFcv/vFC/Aqwto2
            IiJiIg0AIUEH3xZ8kCctABa+Mwf3+BswPnPnW8FrnoO8t0eMhzzuuPdELUymhQX0
            r0jZEBt1AoGBAO7u9uavMKRjpBwIrA59IK7o61Ms+DBxArlw53PjB4Humv1sHoqS
            yjhNp9nXIApGHqluIOLLgSTeZ2qEKvwL6E8R75loE/g2ozQNw452HeCQAxwkveRV
            0qfSRZTwBQrdx5Qw1Tg6NleZveJta7NmNwZn+T+9eLdqfUeE20W2LxGnAoGBAMX1
            tcFo60iKlzkely1GpmC9pZ00deHxQvykFaraye8+ncbur/7aoXcrCxqfNbYzse5Q
            +5OL2TmVTwwUoJXcXsH2vHtGmhQFXSRa72rYz81hPlInn+rzSR/H16t/06c/E12h
            eEqhed044hTSG5+pApcU513oKmnuH16R6m7hFXvXAoGBANo1+d2yT91CduV3chOF
            aWz0ob6DymMLQu6zU15+ECQ1Eu2xaa8q4m5LValYlBVt9qDMSFJ4gwh16cLY1Bz+
            jvpvqf/TkrFUzPZEP74C18R4Ia75S0eWrd3A5vVfw2sqIxSPCJviZjDY4xdA0WS1
            TDmYiYUR+IaiRaokhtGC0jfvAoGATOON8Ax/bpKeAAqYr3ZEg0jF/dR1gQfDe/uD
            ivQmAO3yPGVTKIrksjOewX1bUGSt1KHRxVJJUitjI48TfIG2sGHUfZFDoUkgD1He
            skJ6HAyMNz66x3gtS9HEPBGPNOOz8ucXoO0tNzaz4WBmaFIt9l6hKwFVEAX0WzgT
            tXNpc8sCgYAy8eGPj2UcZfM1yIisRsS8CQS4AbzfoUnmvv0owjDMqCJ/vtBKAe4d
            9gPPeqq18z/gjvXbB3ahUyzUbOhW7Tqf76kN1YPMF+EWf9NFge3mBTebUOygre3u
            o5EZ+KmTWsjCRDZb8HrXHdONNbJpO27GC13tXIz7u6bANey6f/idcQ==
            -----END RSA PRIVATE KEY-----'
  # deploy:
  #   needs: test
  #   runs-on: ubuntu-latest
  #   steps:
  #   - name: Download build artifacts
  #     uses: actions/download-artifact@v2
  #     with:
  #       name: generated-artifacts
  #       path: generated
  #   - name: Configure AWS Credentials
  #     uses: aws-actions/configure-aws-credentials@v1
  #     with:
  #         aws-access-key-id: ${{secrets.AWS_ACCESS_KEY_ID}}
  #         aws-secret-access-key: ${{secrets.AWS_SECRET_ACCESS_KEY}}
  #         aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
  #         aws-region: ${{secrets.AWS_DEFAULT_REGION}}
  #   - name: Deploy to S3
  #     run: aws s3 sync generated/dist 's3://${{ secrets.AWS_S3_BUCKET_ANGULAR }}-${{ env.dev}}' --cache-control no-cache,no-store,must-revalidate --delete